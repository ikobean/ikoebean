package com.mvc1;

import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;

import com.mvc1.Action;
import com.mvc1.ActionForward;
import com.util.HashMapBinder;
import com.vo.SwDesignVO;

public class TestController extends HttpServlet implements Action {
		Logger logger = Logger.getLogger(TestController.class);
		TestLogic testLogic = new TestLogic();
		@Override
		public ActionForward execute(HttpServletRequest req, HttpServletResponse res) 
				throws ServletException, IOException {
			
			ActionForward forward = new ActionForward();
			String viewName		  = null;
			boolean isRedirect    = false;
			//command="/onlineTest/subjectList.kos?work=onlineTest
			//command.substring(0,end);
			String crud = (String)req.getAttribute("crud");
			//==>/onlineTest/subjectList.kos?work=onlineTest
			if("onlineTest/examReceipt".equals(crud)) {
				logger.info("시험 접수 호출 성공");
				int result = -1; //시험 접수 성공 여부
				//사용자가 입력한 값 받아오기
				Map<String,Object> pMap = new HashMap<>();
				HashMapBinder hmb = new HashMapBinder(req);
				hmb.bind(pMap);
				//화면에서 받아올 것들 - 아이디, 과목, 응시일자
				
				//서버에서 새로 채번할 것들 - 수험번호
				result = testLogic.examReceipt(pMap);
				viewName="index.jsp";
				isRedirect = true;
				forward.setRedirect(isRedirect);
				forward.setviewName(viewName);
			}else if("onlineTest/subjectList".equals(crud)) {
				logger.info("testCntrl 호출 성공");
				List<Map<String,Object>> subList = null;
				subList = testLogic.subjectList();//조건절필요없으니까 파라미터 out
				logger.info("subList==>"+subList);
				//조회된 결과를 변수에 담음. request 저장소
				//request 저장소는 forward 일 때만 유지
				req.setAttribute("subList", subList);
				viewName = "jsonSubjectList.jsp";
				isRedirect = false; //redirect니? 아니! ==>forward
				forward.setRedirect(isRedirect);
				forward.setviewName(viewName);
			}else if("onlineTest/swDesignExam".equals(crud)) {
				logger.info("소프트웨어 설계 controller 호출 성공");
				//사용자가 입력한 값 받아오기
				Map<String,Object> pMap = new HashMap<>();
				//화면에서 받아올 것들 - 아이디, 과목, 응시일자
				//서버에서 새로 채번할 것들 - 수험번호
				List<Map<String,Object>> designList = testLogic.swDesignExam(pMap);
				logger.info("designList:"+designList);
				/*
				 * 꺼내온 정보가 표준 패턴이 아닌 2중 구조로 되어 있어서 기존에 사용하던 for문으로 
				 * 값을 꺼낼 수 없다.
				 * 따라서 키값을 사용하여 일차 컬렉션을 꺼내고 난 후
				 * Iterator를 활용하여 값을 꺼내야 원하는 정보를 볼 수 있다.
				 */
				List list =null;
				if(designList !=null) {
					list=(List)designList.get(0).get("key");
				}
				//블록체인 만들 때
				//오픈소스에서 서버의 정보를 외부에 제공할 때
				//CHART 솔루션에서 파이그래프, 막대그래프, ... ...
				//보고서 작성시...
				Iterator<Map<String,Object>> iter = list.iterator();
				while(iter.hasNext()) {
					SwDesignVO swDVO = (SwDesignVO)iter.next();
					logger.info(swDVO.getQuestion());
				}
				req.setAttribute("designList", list);
				viewName="jsonSwDesign.jsp";
				isRedirect = false; //forward로 보낼거얌~ 
				forward.setRedirect(isRedirect);
				forward.setviewName(viewName);
			}
			return forward;
		}
		
		@Override
		public List<Map<String, Object>> test(HttpServletRequest req, HttpServletResponse res)
				throws ServletException, IOException {
			// TODO Auto-generated method stub
			return null;
		}
		@Override
		public ActionForward execute(HttpServletRequest req, HttpServletResponse res, String crud)
				throws ServletException, IOException {
			// TODO Auto-generated method stub
			return null;
		}
}
