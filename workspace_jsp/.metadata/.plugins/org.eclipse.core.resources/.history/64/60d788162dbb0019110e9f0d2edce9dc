
package com.mvc2;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.log4j.Logger;

import com.util.MyBatisCommonFactory;
import com.vo.BoardMasterVO;
import com.vo.BoardSubVO;

public class BoardDao {
	Logger logger = Logger.getLogger(BoardDao.class);
	SqlSessionFactory sqlSessionFactory = null;

	public BoardDao() {
		sqlSessionFactory= 
				MyBatisCommonFactory.getSqlSessionFactory(); //공통코드 static이라서 인스턴스화 없이 메소드 호출 가능.
	}
	public List<Map<String, Object>> boardList(BoardMasterVO bmVO) {
		/*
		 * 웹페이지는 exception이 발생하면 화면을 확인할 수가 없다.
		 * 따라서 에러 상황을 파악하는데 화면이 필요할 때는 초기화를 반드시 해줌
		 */
		List<Map<String, Object>> boardList = new ArrayList<>();
		try {
			SqlSession sqlSession 
				= sqlSessionFactory.openSession();
			boardList = sqlSession.selectList("boardList",bmVO);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return boardList;		
	}
	public List<Map<String, Object>> boardDetail(BoardMasterVO bmVO) {
		/*
		 * 웹페이지는 exception이 발생하면 화면을 확인할 수가 없다.
		 * 따라서 에러 상황을 파악하는데 화면이 필요할 때는 초기화를 반드시 해줌
		 */
		List<Map<String, Object>> boardDetail = new ArrayList<>();
		try {
			SqlSession sqlSession 
			= sqlSessionFactory.openSession();
			boardDetail = sqlSession.selectList("boardDetail",bmVO);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return boardDetail;		
	}
	public int boardMAdd(BoardMasterVO bmVO) {
		logger.info("boardMAdd 호출 성공");
		int result=0;
		try {
			SqlSession sqlSession 
				= sqlSessionFactory.openSession();
			result = sqlSession.update("boardMAdd", bmVO);
			sqlSession.commit();
			sqlSession.close();
		
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;		
	
	}
	
	public int boardSAdd(BoardSubVO bsVO) {
		logger.info("boardSAdd 호출 성공");
		int result=0;
		try {
			SqlSession sqlSession 
				= sqlSessionFactory.openSession();
			result = sqlSession.update("boardSAdd", bsVO);
			sqlSession.commit();
		
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;		
	}


	public int boardMUpd(BoardMasterVO bmVO) {
		logger.info("boardMUpd 호출 성공");
		int result=0;
		try {
			SqlSession sqlSession 
				= sqlSessionFactory.openSession();
			result = sqlSession.update("boardMUpd", bmVO);
			sqlSession.commit();
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("master테이블 업데이트 결과 :"+result);
		return result;		
	}
	
	public int boardSUpd(BoardSubVO bsVO) {
		logger.info("boardSUpd 호출 성공");
		return 0;
	}

	public int boardMDel(BoardMasterVO bmVO) {
		logger.info("boardMDel 호출 성공");
		int result=0;
		try {
			SqlSession sqlSession 
				= sqlSessionFactory.openSession();
			result = sqlSession.update("boardMDel", bmVO);
			sqlSession.commit();
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("master테이블 삭제 결과 :"+result);
		return result;
	}
	
	public int boardSDel(BoardSubVO bsVO) {
		logger.info("boardSDel 호출 성공");
		return 0;
	}
	public int getTotal(BoardMasterVO bmVO) {
		logger.info("getTotal 호출 성공");
		int total=0;
		try {
			SqlSession sqlSession = sqlSessionFactory.openSession();
			total = sqlSession.selectOne("getTotal",bmVO);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return total;
	}
	
	public int getBmno() {
		logger.info("getBmno 호출 성공");
		int bm_no=0;
		try {
			SqlSession sqlSession = sqlSessionFactory.openSession();
									   //xml에 있는 아이디랑 맞춰주기
			bm_no = sqlSession.selectOne("getBmno");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return bm_no;
	}
	
	public int getUBmno() {
		logger.info("getUBmno 호출 성공");
		int bm_no=0;
		try {
			SqlSession sqlSession = sqlSessionFactory.openSession();
			//xml에 있는 아이디랑 맞춰주기
			bm_no = sqlSession.selectOne("getUBmno");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return bm_no;
	}
	
	public int getBmgroup() {
		logger.info("getBmgroup 호출 성공");
		int bm_group=0;
		try {
			SqlSession sqlSession = sqlSessionFactory.openSession();
			//xml에 있는 아이디랑 맞춰주기
			bm_group = sqlSession.selectOne("getBmgroup");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return bm_group;
	}
	public int bmStepUpdate(BoardMasterVO bmVO) {
		int result=0;
		try {
			SqlSession sqlSession = sqlSessionFactory.openSession();
									   //xml에 있는 아이디랑 맞춰주기
			result = sqlSession.update("bmStepUpdate",bmVO);
			sqlSession.commit();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
		
	}




}
