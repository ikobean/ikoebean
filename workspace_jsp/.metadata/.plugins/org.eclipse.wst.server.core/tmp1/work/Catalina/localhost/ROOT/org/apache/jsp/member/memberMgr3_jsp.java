/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2019-07-22 10:27:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.google.gson.Gson;
import java.util.List;
import java.util.Map;
import com.vo.ZipCodeVO;

public final class memberMgr3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/member/../common/JEasyUICommon.jsp", Long.valueOf(1563768128430L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.google.gson.Gson");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.vo.ZipCodeVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  List<ZipCodeVO> zipList = (List<ZipCodeVO>)request.getAttribute("zipList");
  int size = 0;
  if(zipList!=null && zipList.size()>0){
     size = zipList.size();
  }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원목록</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/themes/icon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/demo/demo.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery.easyui.min.js\"></script>");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  //전역변수 선언  - 선택한 로우의 주소를 담는다.\r\n");
      out.write("  var g_address;\r\n");
      out.write("  //해당하는 페이지의 DOM구성이 완료되었을 때\r\n");
      out.write("  $(document).ready(function(){\r\n");
      out.write("     $(\"#dg_member\").datagrid({\r\n");
      out.write("      url:\"memberList.kos?work=member\"\r\n");
      out.write("     ,title:\"회원관리 ver1.0\"\r\n");
      out.write("     ,toolbar:'#tb_member'\r\n");
      out.write("     ,columns:[[\r\n");
      out.write("                {field:'MEM_ID',title:'아이디',width:150},\r\n");
      out.write("                {field:'MEM_PW',title:'비밀번호',width:150},\r\n");
      out.write("                {field:'MEM_NAME',title:'이름',width:150},\r\n");
      out.write("                {field:'MEM_ADDR',title:'주소',width:300},\r\n");
      out.write("                {field:'MEM_ZIPCODE',title:'우편번호',width:300}\r\n");
      out.write("            ]]\r\n");
      out.write("     });////////////  end of datagrid\r\n");
      out.write("     $('#dg_zipcode').datagrid({\r\n");
      out.write("         title:\"우편번호 검색\"\r\n");
      out.write("        ,columns:[[\r\n");
      out.write("             {field:'zipcode',title:'우편번호',width:100,align:'center'},\r\n");
      out.write("             {field:'address',title:'주소',width:350}\r\n");
      out.write("         ]]\r\n");
      out.write("        /* ,data:[\r\n");
      out.write("           {'zipcode':15067,'address':'안산시 상록구 본오동'}\r\n");
      out.write("        ] */\r\n");
      out.write("     });\r\n");
      out.write("     ////////////////////////////////////  회원가입 시작  //////////////////////////////////////////////\r\n");
      out.write("     $(\"#dlg_ins\").dialog({\r\n");
      out.write("        title:\"회원가입\"\r\n");
      out.write("        ,width:450\r\n");
      out.write("        ,height:510\r\n");
      out.write("        ,footer:'#tb_ins'\r\n");
      out.write("        ,closed:true\r\n");
      out.write("        ,modal:true\r\n");
      out.write("     });////////////  end of dialog\r\n");
      out.write("     $(\"#btn_save\").linkbutton({\r\n");
      out.write("        onClick:function(){\r\n");
      out.write("           //alert('save')\r\n");
      out.write("           $(\"#f_ins\").attr('method','get');\r\n");
      out.write("           $(\"#f_ins\").attr('action','./memberInsert.kos');\r\n");
      out.write("           $(\"#f_ins\").submit();\r\n");
      out.write("           $(\"dlg_ins\").dialog('close');\r\n");
      out.write("        }\r\n");
      out.write("     });////////////  end of save\r\n");
      out.write("     $(\"#btn_close\").linkbutton({\r\n");
      out.write("        onClick:function(){\r\n");
      out.write("           $(\"#dlg_ins\").dialog('close');\r\n");
      out.write("        }\r\n");
      out.write("     });////////////  end of close\r\n");
      out.write("     $(\"#btn_dlg_ins\").linkbutton({\r\n");
      out.write("        onClick:function(){\r\n");
      out.write("           $(\"#dlg_ins\").dialog('open');\r\n");
      out.write("        }\r\n");
      out.write("     });\r\n");
      out.write("     ////////////////////////////////////  회원가입 끝  //////////////////////////////////////////////\r\n");
      out.write("     ////////////////////////////////////  우편번호 찾기 시작  //////////////////////////////////////////////\r\n");
      out.write("     $(\"#dlg_zipcode\").dialog({\r\n");
      out.write("        title:\"우편번호 검색기\"\r\n");
      out.write("        ,width:450\r\n");
      out.write("        ,height:510\r\n");
      out.write("        ,closed:true\r\n");
      out.write("        ,modal:true\r\n");
      out.write("     });////////////  end of dialog\r\n");
      out.write("     $('#dong').textbox('textbox').bind('keydown', function(e){\r\n");
      out.write("        if (e.keyCode == 13){   // when press ENTER key, accept the inputed value.\r\n");
      out.write("           //우편번호 데이터 초기화 하기\r\n");
      out.write("           $('#dg_zipcode').datagrid({\r\n");
      out.write("                    url:'./zipcodeList.kos?work=member&dong='+$(this).val()\r\n");
      out.write("              ,singleSelect:true\r\n");
      out.write("              //index는 0부터 카운트 됨.\r\n");
      out.write("              //getSelect하면 선택한 로우의 값을 가짐.\r\n");
      out.write("              //활용예)row.address, row.zipcode\r\n");
      out.write("              ,onSelect:function(index,row){\r\n");
      out.write("                 var row = $(this).datagrid('getSelected');\r\n");
      out.write("                 g_address = row.address;\r\n");
      out.write("                 $('#mem_addr').textbox('setValue',g_address);\r\n");
      out.write("              }\r\n");
      out.write("              ,onDblClickCell: function(index,field,value){\r\n");
      out.write("                 if('zipcode'==field){\r\n");
      out.write("                    //우편번호 textbox에 출력 id\r\n");
      out.write("                    $('#mem_zipcode').textbox('setValue',value);\r\n");
      out.write("                    $('#dg_zipcode').datagrid('clearSelections');\r\n");
      out.write("                 }\r\n");
      out.write("                 $('#dlg_zipcode').dialog('close');\r\n");
      out.write("              }\r\n");
      out.write("           });\r\n");
      out.write("        }\r\n");
      out.write("     });\r\n");
      out.write("     $(\"#btn_zipcode\").linkbutton({\r\n");
      out.write("        onClick:function(){\r\n");
      out.write("           $(\"#dlg_zipcode\").dialog('open');\r\n");
      out.write("        }\r\n");
      out.write("     });////////////  end of zipcode\r\n");
      out.write("     $(\"#btn_search\").linkbutton({\r\n");
      out.write("        onClick:function(){\r\n");
      out.write("           var u_dong = $(\"#dong\").val();\r\n");
      out.write("           $.ajax({\r\n");
      out.write("              method:'get'\r\n");
      out.write("              ,url:'./zipcodeList.kos?work=member&dong='+u_dong\r\n");
      out.write("              ,success:function(data){\r\n");
      out.write("                 alert('data: '+data)\r\n");
      out.write("                 $(\"#dg_zipcode\").datagrid({\r\n");
      out.write("                     url:'./zipcodeList.kos?work=member&dong='+u_dong\r\n");
      out.write("                 });\r\n");
      out.write("              }\r\n");
      out.write("           });\r\n");
      out.write("        }\r\n");
      out.write("     });////////////  end of zipcode\r\n");
      out.write("     ////////////////////////////////////  우편번호 찾기 끝  //////////////////////////////////////////////\r\n");
      out.write("  });\r\n");
      out.write(" \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("​\r\n");
      out.write("  <table id=\"dg_member\" width=\"1200px\" border=\"1\"></table>\r\n");
      out.write("​\r\n");
      out.write("  <!-- 테이블 안에 들어갈 링크버튼 추가 -->\r\n");
      out.write("  <div id=\"tb_member\" style=\"padding:5px;\">\r\n");
      out.write("      <a id=\"btn_dlg_ins\" href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-add'\" >회원가입</a>\r\n");
      out.write("   </div>\r\n");
      out.write("   <!-- 다이얼로그 -->\r\n");
      out.write("   <!--=============================== [[ 우편번호 검색기 ]] ===============================================  -->\r\n");
      out.write("  <div id=\"dlg_zipcode\" style=\"width:100%;max-width:465px;paddion:30px 30px\">\r\n");
      out.write("     <input class=\"easyui-textbox\" id=\"dong\" name=\"dong\" data-options=\"prompt:'동을 입력하세요.'\" style=\"width:300px;\">\r\n");
      out.write("      <a id=\"btn_search\" href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-search'\" onclick=\"\">우편번호 검색</a>\r\n");
      out.write("     <div style=\"margin-bottom:10px\"></div>\r\n");
      out.write("     <table border=\"1\" id=\"dg_zipcode\">\r\n");
      out.write("\r\n");
      out.write("     </table>\r\n");
      out.write("  </div>\r\n");
      out.write("   <!--=============================== [[ 우편번호 검색기 ]] ===============================================  -->\r\n");
      out.write("   <!--=============================== [[ 회원가입 시작 ]] =================================================-->\r\n");
      out.write("   <div id=\"dlg_ins\" class=\"easyui-dialog\" title=\"Basic Dialog\"  style=\"padding:10px\">\r\n");
      out.write("<!--\r\n");
      out.write("사용자가 화면에 입력한 값을 서버측에 전달 할 때 반드시 name속성이 필요하다.\r\n");
      out.write("입력받은 컴포넌트에 값이 담기기 때문에 반드시 form전송으로 처리한다.\r\n");
      out.write("form태그는 여러개를 사용할 수 있고 아이디로 구분하여 서로 다른 서버 계층으로 전송이 가능하다.\r\n");
      out.write("화면에는 존재하지 않지만 개발자가 업무처리를 위한 목적으로 따로 전달하고 싶은 정보가 있을 때도\r\n");
      out.write("form태그를 사용할 것.\r\n");
      out.write("이 때 사용하는 컴포넌트는 hidden속성으로 처리한다.\r\n");
      out.write("hidden속성은 input type  text속성과 동일하게 사용하면 된다.\r\n");
      out.write("아이디와 이름 속성을 반드시 부여하여\r\n");
      out.write("서버에 전송할 때와 ajax처리 할 때를 준비해 둔다.\r\n");
      out.write("아이디는 절대로 중복되면 안된다.\r\n");
      out.write("실제 서버로 전송할 때는 form태그에 메소드 방식과 목적지를 기술하지 말고 jquery api를 사용하여 함수 처리한다.\r\n");
      out.write("화면에 담겨 있는 정보들은 가독성이 떨어지고 화면 내용이 많아지게 되면 찾기가 불편함.\r\n");
      out.write("-->\r\n");
      out.write("      <form id=\"f_ins\">\r\n");
      out.write("         <input type=\"hidden\" id=\"work\" name=\"work\" value=\"member\">\r\n");
      out.write("               <div style=\"margin-bottom:20px\">\r\n");
      out.write("                    <input class=\"easyui-textbox\" id=\"mem_id\" name=\"mem_id\" label=\"아이디\"\r\n");
      out.write("                     labelPosition=\"top\" style=\"width:400px;\">\r\n");
      out.write("             </div>\r\n");
      out.write("             <div style=\"margin-bottom:20px\">\r\n");
      out.write("                 <input class=\"easyui-textbox\" id=\"mem_name\" name=\"mem_name\" label=\"이름\" \r\n");
      out.write("                 labelPosition=\"top\" style=\"width:400px;\">\r\n");
      out.write("             </div>\r\n");
      out.write("             <div style=\"margin-bottom:20px\">\r\n");
      out.write("                 <input class=\"easyui-textbox\" id=\"mem_zipcode\" name=\"mem_zipcode\" label=\"우편변호\"\r\n");
      out.write("                  labelPosition=\"top\" style=\"width:300px;\">\r\n");
      out.write("                <a id=\"btn_zipcode\" href=\"#\" class=\"easyui-linkbutton\" onclick=\"\">우편번호 검색</a>\r\n");
      out.write("             </div>\r\n");
      out.write("             <div style=\"margin-bottom:20px\">\r\n");
      out.write("                 <input class=\"easyui-textbox\" id=\"mem_addr\" name=\"mem_addr\" label=\"주소\" \r\n");
      out.write("                 labelPosition=\"top\" style=\"width:400px;\">\r\n");
      out.write("             </div>\r\n");
      out.write("             <div style=\"margin-bottom:20px\">\r\n");
      out.write("                 <input class=\"easyui-textbox\" id=\"mem_pw\" name=\"mem_pw\" label=\"비밀번호\"\r\n");
      out.write("                  labelPosition=\"top\" style=\"width:400px;\">\r\n");
      out.write("             </div>\r\n");
      out.write("      </form>\r\n");
      out.write("   </div>\r\n");
      out.write("      <div id=\"tb_ins\" style=\"padding:5px;\" align=\"right\">\r\n");
      out.write("         <a id=\"btn_save\" href=\"#\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-save'\" onclick=\"mInsert()\">저장</a>\r\n");
      out.write("         <a id=\"btn_close\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-cancel'\">닫기</a>\r\n");
      out.write("      </div>\r\n");
      out.write("    <!--=============================== [[ 회원가입 끝 ]] =================================================-->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
