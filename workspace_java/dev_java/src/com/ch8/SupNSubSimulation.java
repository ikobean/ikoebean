package com.ch8;
/**********************************************************
 * 자바의 특징 - How can I coding like JAVA? -재사용성, 다형성 p259 ★
 * 인스턴스화 할 때 선언부와 생성부의 이름이 다를 수 있다.
 * 기억할 것 - 생성부에 오는 클래스 이름으로 객체가 생성된다.
 * ex) A a = new B(); - B 이름으로 생성됨.
 * 
 **********************************************************/
public class SupNSubSimulation {

	public static void main(String[] args) {
		Sup sup = new Sup();
		Sup sup2 = new Sub(); //클래스간 결합도가 낮춰주고 다형성의 출발점! 선언부와 생성부가 다름. 서로 상속관계이기 때문에 가능한 인스턴스화.
		//Sub sup3 = new Sup(); 문법에러
		
		Sub sub1 = new Sub();
		sub1.methodA();
		sub1.methodB();
		//sup2는 Sup타입의 변수이고 실제로 생성된 객체는 Sub이다.
		//선언부의 타입과 생성부의 타입이 다를 수 있다. - 이 때 다형성을 기대할 수 있다.
		//만일 선언부의 타입과 생성부의 타입이 같을 때는 다형성은 불가하다.
		sup.methodA();
		sup2.methodA();
		
		sup2 = (Sub)sup2; //캐스팅 연산자
		//sup2.methodB();    를 써도 안됩니다~
		/************************************************************
		 * 냥냥냥냥냥냥냥냥냥냥냥 냥냥냥 냥냥 냥 냥냥 냥 냥냥냥냥냥냥냥냥 냥냥냥냥냥냥냥냥 냥냥냥 냥냥냥  
		 ************************************************************/
				
		
		
		
		
	}

}
